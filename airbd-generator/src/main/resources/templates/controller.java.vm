package ${package.Controller};


#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end
import com.alibaba.fastjson.JSON;
import org.springframework.ui.Model;
import lombok.extern.slf4j.Slf4j;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;

import com.airboard.core.base.BaseResult;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};
import java.util.List;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

/**
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@Slf4j
@RequestMapping("/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    @Autowired
    public ${table.serviceName} ${table.entityPath}Service;

    /**
     * 跳转列表页面
     * @param request
     * @param model
     * @return
     */
    @GetMapping("/index")
    public String index(HttpServletRequest request, Model model) {
        return "${table.entityPath}List";
    }

    /**
     * 分页查询数据
     *
     * @param bootStrapTable  分页信息
     * @param ${table.entityPath}   查询条件
     * @return
     */
    @ResponseBody
    @GetMapping("/list${entity}Page")
    public BaseResult list${entity}Page() {
        BaseResult baseResult = new BaseResult();
        try {

        } catch (Exception e) {
            log.error("list${entity}Page -=- {}",e.toString());
        }
        return result;
    }

    /**
     * 跳转添加页面
     * @param request
     * @param response
     * @param model
     * @return
     */
    @GetMapping("/add")
    public String add(HttpServletRequest request,HttpServletResponse response,Model model) {
        try {

        } catch (Exception ex){
            log.error("${table.entityPath}Add -=- {}",ex.toString());
        }
        return "${table.entityPath}Add";
    }

    /**
     * 跳转修改页面
     * @param request
     * @param id  实体ID
     * @return
     */
    @GetMapping("/toUpdate")
    public String ${table.entityPath}Update(HttpServletRequest request, Long id) {
        try {
            ${entity} ${table.entityPath} = i${entity}Service.getById(id);
            request.setAttribute("${table.entityPath}",${table.entityPath});
        }catch (Exception ex){
            log.error("${table.entityPath}Update -=- {}",ex.toString());
        }
        return "${table.entityPath}Update";
    }

    /**
     * 保存和修改公用的
     * @param ${table.entityPath}  传递的实体
     * @return  0 失败  1 成功
     */
    @ResponseBody
    @PostMapping("/save")
    public int ${table.entityPath}Save(${entity} ${table.entityPath}) {
        int count = 0;
        try {
            //count = i${entity}Service.insertOrUpdate(${table.entityPath}) ? 1 : 0;
        } catch (Exception e) {
            log.error("${table.entityPath}Save -=- {}",e.toString());
        }
        return count;
    }

    /**
     * 根据id删除对象
     * @param id  实体ID
     * @return 0 失败  1 成功
     */
    @ResponseBody
    @PostMapping("/delete")
    public int delete(Long... id){
        int count = 0;
        try {
            count = i${entity}Service.deleteById(id) ? 1 : 0;
        }catch (Exception e){
            log.error("${table.entityPath}Delete -=- {}",e.toString());
        }
        return count;
    }

}